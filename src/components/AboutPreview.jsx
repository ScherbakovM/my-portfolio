import React, { useRef } from "react";
import { gsap } from "gsap";
import { useGSAP } from "@gsap/react";
import { ScrollTrigger } from "gsap/ScrollTrigger";
import { SplitText } from "gsap/SplitText";
import AnimatedButton from "./AnimatedButton";
gsap.registerPlugin(useGSAP, ScrollTrigger, SplitText);

export default function AboutPreview() {
  const aboutPreviewTitleRef = useRef();
  const aboutBtnRef = useRef();

  useGSAP(() => {
    const triggers = [];

    const animate = () => {
      triggers.forEach((t) => t.kill());
      triggers.length = 0;

      const timeline = gsap.timeline();

      timeline

        .fromTo(
          ".about-preview__title-span",
          { y: "200%", rotate: 8 },
          {
            y: 0,
            rotate: 0,
            stagger: { amount: 0.2, from: "end" },
            duration: 0.6,
            ease: "back.out(3)",
          }
        )
        .fromTo(
          ".about-preview__description-p",
          { y: "100%" },
          {
            y: 0,
            stagger: { amount: 0.1, from: "start" },
            duration: 0.6,
            ease: "back.out(1)",
          },
          "0.4"
        );

      const triggerOne = ScrollTrigger.create({
        trigger: ".about-preview__title",
        start: "center bottom",
        endTrigger: ".about-preview",
        end: "bottom center",
        toggleActions: "play none none reverse",
        animation: timeline,
      });

      const triggerTwo = ScrollTrigger.create({
        trigger: ".about-preview__description-button",
        start: "center bottom",
        end: "bottom bottom",
        toggleActions: "play none none reverse",
        animation: gsap.fromTo(
          aboutBtnRef.current,
          { scale: 0 },
          {
            scale: 1,
            duration: 0.6,
            ease: "back.out(1.1)",
          }
        ),
      });

      triggers.push(triggerOne);
      triggers.push(triggerTwo);
    };

    animate();

    const handleResize = () => {
      animate();
      ScrollTrigger.refresh();
    };

    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
      triggers.forEach((t) => t.kill());
    };
  }, []);

  return (
    <div className="about-preview">
      <div className="about-preview__horizontal-indent"></div>

      <div className="about-preview__wrapper">
        <div ref={aboutPreviewTitleRef} className="about-preview__title">
          <div className="about-preview__title-text">
            <span className="about-preview__title-span">–û–±–æ</span>
          </div>

          <div className="about-preview__title-text">
            <span className="about-preview__title-span">–º–Ω–µ</span>
          </div>
        </div>

        <div className="about-preview__description">
          <div className="about-preview__description-text">
            <div className="about-preview__description-block">
              <p className="about-preview__description-p">
                –†–∞–¥ –≤–∞—à–µ–º—É –≤–∏–∑–∏—Ç—É. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏—Ö–∞–∏–ª, —è –∑–∞–Ω–∏–º–∞—é—Å—å
                –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π.
              </p>
            </div>

            <div className="about-preview__description-block">
              <p className="about-preview__description-p">
                –≠—Ç–æ—Ç —Å–∞–π—Ç ‚Äî –º–æ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ –ø—Ä–æ–µ–∫—Ç—ã, –Ω–∞–¥
                –∫–æ—Ç–æ—Ä—ã–º–∏ —è —Ä–∞–±–æ—Ç–∞–ª, –∏ —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ. –°–µ–π—á–∞—Å —è
                –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –ø–æ–∏—Å–∫–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∑–∞–¥–∞—á,
                –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –≤–¥–æ—Ö–Ω–æ–≤—è—Ç –Ω–∞ –Ω–æ–≤—ã–µ –∏–¥–µ–∏. –ï—Å–ª–∏ –≤—ã
                —Ö–æ—Ç–∏—Ç–µ –≤–æ–ø–ª–æ—Ç–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç –≤ –∂–∏–∑–Ω—å ‚Äî –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å!
              </p>
            </div>

            <div className="about-preview__description-block">
              <span className="about-preview__description-p">
                –¢–∞–∫–∂–µ, –µ—Å–ª–∏ –≤–∞—à–µ–º—É —Å–∞–π—Ç—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö
                —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å ‚Äî –ø–æ–º–æ–≥—É —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
                –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ.
              </span>
            </div>
          </div>
        </div>
      </div>

      <a className="about-preview__description-button" href="/about">
        <AnimatedButton text="ü°• –ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" ref={aboutBtnRef} />
      </a>
    </div>
  );
}
